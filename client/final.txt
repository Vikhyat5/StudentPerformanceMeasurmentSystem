import { Template } from 'meteor/templating';
import { ReactiveVar } from 'meteor/reactive-var';
import { Mongo } from 'meteor/mongo';
import { Session } from 'meteor/session';
import './main.html';


myapp = new Mongo.Collection('reso');                                                  // CREATING COLLECTIONS
mystudent = new Mongo.Collection('student');
theuser = new Mongo.Collection('latest');
thestudent=new Mongo.Collection('thestudent');
studenttab=new Mongo.Collection('studenttab');
cgpa=new Mongo.Collection('cgpa');
scgpa=new Mongo.Collection('scgpa');
current=new Mongo.Collection('current');
Template.body.helpers({
      reso: function()
      {       
        return myapp.find();
      }
});
Template.body.helpers({
      current: function()
      {       
        return current.find();
      }
});
Template.body.helpers({
      student: function()
      {       
        return mystudent.find();
      }
});
Template.body.helpers({
      latest: function()
      {       
        return theuser.find();
      }
});
Template.body.helpers({
      thestudent: function()
      {       
        return thestudent.find();
      }
});
Template.body.helpers({
      studenttab: function()
      {       
        return studenttab.find();
      }
});
Template.body.helpers({
      cgpa: function()
      {       
        return cgpa.find();
      }
});
Template.body.helpers({
      scgpa: function()
      {       
        return scgpa.find();
      }
});

mydata = new Mongo.Collection('mydata'); 
Template.body.helpers({
      mydata: function()
      {       
        return mydata.find();
      }
});


                                      // 141363**************                   
studenttab.insert({enroll:"141363",subject:"a1",subjectname:"Mathematics 1",marks:[10,20,20]});
studenttab.insert({enroll:"141363",subject:"a2",subjectname:"Physics 1 ",marks:[10,21,20]});
studenttab.insert({enroll:"141363",subject:"a3",subjectname:"Electircal Circuit",marks:[10,19,21]});
studenttab.insert({enroll:"141363",subject:"a4",subjectname:"C Programming",marks:[15,18,10]});
studenttab.insert({enroll:"141363",subject:"b1",subjectname:"Mathematics 2",marks:[9,15,12]});
studenttab.insert({enroll:"141363",subject:"b2",subjectname:"Physics 2",marks:[8,20,15]});
studenttab.insert({enroll:"141363",subject:"b3",subjectname:"DS",marks:[7,21,30]});
studenttab.insert({enroll:"141363",subject:"b4",subjectname:"GCP",marks:[6,14,29]});
studenttab.insert({enroll:"141363",subject:"c1",subjectname:"Environemtal",marks:[8,11,28]});
studenttab.insert({enroll:"141363",subject:"c2",subjectname:"OOPs",marks:[9,12,26]});
studenttab.insert({enroll:"141363",subject:"c3",subjectname:"Algorithm",marks:[10,13,27]});
studenttab.insert({enroll:"141363",subject:"c4",subjectname:"Digital Electronics",marks:[11,14,15]});

                                    //141364 
studenttab.insert({enroll:"141364",subject:"a1",subjectname:"Mathematics 1",marks:[10,20,15]});
studenttab.insert({enroll:"141364",subject:"a2",subjectname:"Physics 1 ",marks:[11,21,16]});
studenttab.insert({enroll:"141364",subject:"a3",subjectname:"Electircal Circuit",marks:[12,22,17]});
studenttab.insert({enroll:"141364",subject:"a4",subjectname:"C Programming",marks:[13,23,18]});
studenttab.insert({enroll:"141364",subject:"b1",subjectname:"Mathematics 2",marks:[14,24,19]});
studenttab.insert({enroll:"141364",subject:"b2",subjectname:"Physics 2",marks:[15,18,20]});
studenttab.insert({enroll:"141364",subject:"b3",subjectname:"DS",marks:[9,15,21]});
studenttab.insert({enroll:"141364",subject:"b4",subjectname:"GCP",marks:[8,14,22]});
studenttab.insert({enroll:"141364",subject:"c1",subjectname:"Environemtal",marks:[7,13,23]});
studenttab.insert({enroll:"141364",subject:"c2",subjectname:"OOPs",marks:[6,12,24]});
studenttab.insert({enroll:"141364",subject:"c3",subjectname:"Algorithm",marks:[5,11,25]});
studenttab.insert({enroll:"141364",subject:"c4",subjectname:"Digital Electronics",marks:[4,10,26]});

                                  //141365
studenttab.insert({enroll:"141365",subject:"a1",subjectname:"Mathematics 1",marks:[11,18,15]});
studenttab.insert({enroll:"141365",subject:"a2",subjectname:"Physics 1 ",marks:[12,17,14]});
studenttab.insert({enroll:"141365",subject:"a3",subjectname:"Electircal Circuit",marks:[13,16,13]});
studenttab.insert({enroll:"141365",subject:"a4",subjectname:"C Programming",marks:[14,15,12]});
studenttab.insert({enroll:"141365",subject:"b1",subjectname:"Mathematics 2",marks:[15,17,11]});
studenttab.insert({enroll:"141365",subject:"b2",subjectname:"Physics 2",marks:[10,19,10]});
studenttab.insert({enroll:"141365",subject:"b3",subjectname:"DS",marks:[11,19,10]});
studenttab.insert({enroll:"141365",subject:"b4",subjectname:"GCP",marks:[12,21,8]});
studenttab.insert({enroll:"141365",subject:"c1",subjectname:"Environemtal",marks:[13,22,7]});
studenttab.insert({enroll:"141365",subject:"c2",subjectname:"OOPs",marks:[14,23,6]});
studenttab.insert({enroll:"141365",subject:"c3",subjectname:"Algorithm",marks:[15,24,5]});
studenttab.insert({enroll:"141365",subject:"c4",subjectname:"Digital Electronics",marks:[16,25,4]});

                                        //141366
studenttab.insert({enroll:"141366",subject:"a1",subjectname:"Mathematics 1",marks:[10,20,15]});
studenttab.insert({enroll:"141366",subject:"a2",subjectname:"Physics 1 ",marks:[11,21,16]});
studenttab.insert({enroll:"141366",subject:"a3",subjectname:"Electircal Circuit",marks:[12,22,17]});
studenttab.insert({enroll:"141366",subject:"a4",subjectname:"C Programming",marks:[13,23,18]});
studenttab.insert({enroll:"141364",subject:"b1",subjectname:"Mathematics 2",marks:[14,24,19]});
studenttab.insert({enroll:"141364",subject:"b2",subjectname:"Physics 2",marks:[15,18,20]});
studenttab.insert({enroll:"141364",subject:"b3",subjectname:"DS",marks:[9,15,21]});
studenttab.insert({enroll:"141364",subject:"b4",subjectname:"GCP",marks:[8,14,22]});
studenttab.insert({enroll:"141364",subject:"c1",subjectname:"Environemtal",marks:[7,13,23]});
studenttab.insert({enroll:"141364",subject:"c2",subjectname:"OOPs",marks:[6,12,24]});
studenttab.insert({enroll:"141364",subject:"c3",subjectname:"Algorithm",marks:[5,11,25]});
studenttab.insert({enroll:"141364",subject:"c4",subjectname:"Digital Electronics",marks:[4,10,26]});


//*****************************************CGPA**********************************
cgpa.insert({enroll:"141363",pointer:[7.1,6.2,6.7,6.3]});
cgpa.insert({enroll:"141364",pointer:[9.1,8.2,7.7,7.3]});
cgpa.insert({enroll:"141365",pointer:[9.1,8.2,8.7,8.3]});
cgpa.insert({enroll:"141366",pointer:[8.1,7.2,7.7,6.3]});
cgpa.insert({enroll:"141367",pointer:[7.1,7.2,7.7,7.3]});
cgpa.insert({enroll:"141368",pointer:[9.1,9.2,8.7,8.3]});


scgpa.insert({enroll:"141363",pointer:[7.1,6.5,6.5,6.7]});
scgpa.insert({enroll:"141364",pointer:[9.1,8.2,7.7,7.3]});
scgpa.insert({enroll:"141365",pointer:[9.1,8.2,8.7,8.3]});
scgpa.insert({enroll:"141366",pointer:[8.1,7.2,7.7,6.3]});
scgpa.insert({enroll:"141367",pointer:[7.1,7.2,7.7,7.3]});
scgpa.insert({enroll:"141368",pointer:[9.1,9.2,8.7,8.3]});





                            
current.insert({name:"currentuser",enroll:"141363"});
console.log(current.findOne());

                                                                                          //   DEFAULT PAGE
Session.setDefault('page', 'home');

 UI.body.helpers({
        isPage: function(page){
            return Session.equals('page', page)
        }
    })
var userid="141";
UI.body.events({
        'click .clickChangesPage': function(event, template){
          if(event.currentTarget.getAttribute('data-page')=='about')
          { 
            var enroll = $('.enroll').val();
            var pswd = $('.pswd').val();
            userid= enroll;
                                                                                       //   AUTHENTICATION
                     if(enroll=="141363" && pswd=="141363")
                {
                     //cuser= true;
                      
                    userid= enroll;
                     // alert(userid);
                      
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                      Session.set('usercurrent',userid);
                      mycu();
                    // console.log(current.findOne());

                }
                   if(enroll=="141364" && pswd=="141364")
                {
                     //cuser= true;
                     userid= enroll;
                     // alert(userid);

                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                     Session.set('usercurrent',userid);
                     mycu();
                    //event.thename.setText("141363");
                    //namethe.setText("hello");
                    
                }
                   if(enroll=="141365" && pswd=="141365")
                {   
                     //cuser= true;
                     userid= enroll;
                     // alert(userid);
                    
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                    current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                    Session.set('usercurrent',userid);
                    mycu();
                    //event.thename.setText("141363");
                    //namethe.setText("hello");
                      
                }
                   if(enroll=="141366" && pswd=="141366")
                {
                     //cuser= true;
                      
                    userid= enroll;
                     // alert(userid);
                      
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                      Session.set('usercurrent',userid);
                      mycu();
                    // console.log(current.findOne());

                }
                   if(enroll=="141367" && pswd=="141367")
                {
                     //cuser= true;
                      
                    userid= enroll;
                     // alert(userid);
                      
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                      mycu();
                    // console.log(current.findOne());

                }
                   if(enroll=="141368" && pswd=="141368")
                {
                     //cuser= true;
                      
                    userid= enroll;
                     // alert(userid);
                      
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                      Session.set('usercurrent',userid);
                      mycu();
                    // console.log(current.findOne());

                }
                   if(enroll=="t1" && pswd=="t1")
                {
                     //cuser= true;
                      
                    userid= enroll;
                     // alert(userid);
                      
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                      Session.set('usercurrent',userid);
                      mycu();
                    // console.log(current.findOne());

                }
                   if(enroll=="t2" && pswd=="t2")
                {
                     //cuser= true;
                      
                    userid= enroll;
                     // alert(userid);
                      
                     Session.set('page', event.currentTarget.getAttribute('data-page'));
                     current.update({_id:"o59NJo9XGaSBBWddr"},{$set:{enroll:userid}});
                      Session.set('usercurrent',userid);
                      mycu();
                    // console.log(current.findOne());

                }


                else
                {
                     // cuser= false;
                     alert('INCORECT UserId or Password');

                }

            
          }

          else
          {
               Session.set('page', event.currentTarget.getAttribute('data-page'));
          }
          
        }
    });


var cu=Session.get('usercurrent');
//var tunu=cu +" hell yagkk";


                                                             //   Dashboard Changes
Template.about.myname = function() {
    var myname = "Hello "+userid; 
     console.log(myname);
    return myname;
}

function mycu(){
       var cu=Session.get('usercurrent');
        abc= cu + " hello the world";

}
 console.log(abc);

ab1=cgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[0];
 ab2=cgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[1];
 ab3=cgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[2];
 ab4=cgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[3];

var newdata =[ab1,ab2,ab3,ab4];
//console.log(newdata);
a1=scgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[0];
 a2=scgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[1];
 a3=scgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[2];
 a4=scgpa.findOne({enroll:cu},{pointer:1,_id:0}).pointer[3];

var newdata2 =[a1,a2,a3,a4];

  /*                                                                                           // GRAPHS
var vikhyat=current.findOne().enroll ;
console.log(vikhyat);
var ab1,ab2,ab3,ab4;
if(vikhyat!="141")
{
  ab1=cgpa.findOne({enroll: vikhyat},{pointer:1,_id:0}).pointer[0];
 ab2=cgpa.findOne({enroll:vikhyat},{pointer:1,_id:0}).pointer[1];
 ab3=cgpa.findOne({enroll:vikhyat},{pointer:1,_id:0}).pointer[2];
 ab4=cgpa.findOne({enroll:vikhyat},{pointer:1,_id:0}).pointer[3];


var newdata =[ab1,ab2,ab3,ab4];

console.log(newdata);
}

mydata.insert({name:"hello2",data:[7.1,6.2,6.7,6.3,6.7,7.3,7.5,7.6]});
mydata.insert({name:"hello3",data:[90,91,25,32,45]});




// from chart2   application

Template.chart.onCreated(function() {
  chart1 = this.subscribe('chart1');
  
});

Template.theorychart.onCreated(function() {
  chart2 = this.subscribe('chart2');
  
});


drawchart = function(datavalues)
{

     var data = 
     {
        labels:[ "Semester 1", "Semester 2", "Semester 3", "Semester 4", "Semester 5", "Semester 6", "Semester 7", "Semester 8"],
       datasets:
     [
        {   

            label: "My First dataset",
            fillColor: "rgba(0,128,43,0.3)",
            strokeColor: "rgba(26,255,102,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: newdata            
        },   
    ]   
    }; 
 


   var ctx = $("#myChart").get(0).getContext("2d");
    new Chart(ctx).Line(data);
    var ctx2 = $("#mytheorychart").get(0).getContext("2d");
    new Chart(ctx2).Line(data);
};




Template.chart.rendered = function()
{
      
      Tracker.autorun(function ()
       {
          if (chart1.ready()) 
          {
                var budgetdata = mydata.find({'name':'chart1'});
               
                var datavalues=[];
                var datalabels=["Semester1", "Semester1", "Semester2", "Semester3", "Semester4", "Semester5", "Semester6", "Semester7", "Semester8"];
                budgetdata.forEach(function(option) {
                   
                    datavalues.push(option.t1);
                    
                });
             
                drawchart(datavalues,datalabels);
         }   
    
       });

};
*/

Template.charts.onRendered(function() {
    // Get the context of the canvas element we want to select
    var ctx  = document.getElementById("myChart").getContext("2d");
    var ctx2 = document.getElementById("myChart2").getContext("2d");
    var ctx3 = document.getElementById("myChart3").getContext("2d");
    var ctx4 = document.getElementById("myChart4").getContext("2d");
    var ctx5 = document.getElementById("myChart5").getContext("2d");

    // Set the options
    var options = {

        ///Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,

        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",

        //Number - Width of the grid lines
        scaleGridLineWidth: 1,

        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,

        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,

        //Boolean - Whether the line is curved between points
        bezierCurve: true,

        //Number - Tension of the bezier curve between points
        bezierCurveTension: 0.4,

        //Boolean - Whether to show a dot for each point
        pointDot: true,

        //Number - Radius of each point dot in pixels
        pointDotRadius: 4,

        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,

        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,

        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,

        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,

        //Boolean - Whether to fill the dataset with a colour
        datasetFill: true,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    };

    var options2 = {
        //Boolean - Whether to show lines for each scale point
        scaleShowLine: true,

        //Boolean - Whether we show the angle lines out of the radar
        angleShowLineOut: true,

        //Boolean - Whether to show labels on the scale
        scaleShowLabels: false,

        // Boolean - Whether the scale should begin at zero
        scaleBeginAtZero: true,

        //String - Colour of the angle line
        angleLineColor: "rgba(0,0,0,.1)",

        //Number - Pixel width of the angle line
        angleLineWidth: 1,

        //String - Point label font declaration
        pointLabelFontFamily: "'Arial'",

        //String - Point label font weight
        pointLabelFontStyle: "normal",

        //Number - Point label font size in pixels
        pointLabelFontSize: 10,

        //String - Point label font colour
        pointLabelFontColor: "#666",

        //Boolean - Whether to show a dot for each point
        pointDot: true,

        //Number - Radius of each point dot in pixels
        pointDotRadius: 3,

        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,

        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,

        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,

        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,

        //Boolean - Whether to fill the dataset with a colour
        datasetFill: true,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    }

    // Set the data
    var data = {
        labels: ["Semester 1", "Semester 2", "Semester 3", "Semester 4", "Semester 5", "Semester 6", "Semester 7", "Semester 8"],
        datasets: [{
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data:newdata
        }, {
            label: "My Second dataset",
            fillColor: "rgba(151,187,205,0.2)",
            strokeColor: "rgba(151,187,205,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: newdata2
        }]
    };
    var data2 = {
        labels: ["Mathematics 1", "Physics 1 ", "Electircal Circuit", "C Programming", "Mathematics 2","Physics 2", "DS"],
        datasets: [{
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: [random(), random(), random(), random(), random(), random(), random()]
        }, {
            label: "My Second dataset",
            fillColor: "rgba(255, 153, 0,0.2)",
            strokeColor: "rgba(204, 122, 0,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: [random(), random(), random(), random(), random(), random(), random()]
        }]
    };

    var data3 = [{
            value: random(),
            color: "#F7464A",
            highlight: "#FF5A5E",
            label: "Red"
        }, {
            value: random(),
            color: "#46BFBD",
            highlight: "#5AD3D1",
            label: "Green"
        }, {
            value: random(),
            color: "#FDB45C",
            highlight: "#FFC870",
            label: "Yellow"
        }, {
            value: random(),
            color: "#949FB1",
            highlight: "#A8B3C5",
            label: "Grey"
        }, {
            value: random(),
            color: "#4D5360",
            highlight: "#616774",
            label: "Dark Grey"
        }

    ];
    var data4 = [
    {
        value: random(),
        color:"#F7464A",
        highlight: "#FF5A5E",
        label: "Red"
    },
    {
        value: random(),
        color: "#46BFBD",
        highlight: "#5AD3D1",
        label: "Green"
    },
    {
        value: random(),
        color: "#FDB45C",
        highlight: "#FFC870",
        label: "Yellow"
    }
    ]

    // draw the charts
    var myLineChart = new Chart(ctx).Line(data, options);
    var myRadarChart = new Chart(ctx2).Bar(data2, options2);
    var myPolarArea = new Chart(ctx3).PolarArea(data3, {
        segmentStrokeColor: "#000000"
    });
    // For a pie chart
    var myPieChart = new Chart(ctx4).Pie(data4,{
        animateScale: true
    });

    // And for a doughnut chart
    var myDoughnutChart = new Chart(ctx5).Doughnut(data4,{
        animateScale: true
    });
});

Template.moreCharts.onRendered(function() {
    var ctx  = document.getElementById("myChart").getContext("2d");

    var rand1 = random();
    var rand2 = random();
    var rand3 = random();
    var data = [
    {
        value: rand1,
        color:"#F7464A",
        highlight: "#FF5A5E",
        label: "Red"
    },
    {
        value: rand2,
        color: "#46BFBD",
        highlight: "#5AD3D1",
        label: "Green"
    },
    {
        value: rand3,
        color: "#FDB45C",
        highlight: "#FFC870",
        label: "Yellow"
    }
    ]
    var myPieChart = new Chart(ctx).Pie(data);
});

function random() {
    return Math.floor((Math.random() * 100) + 1);
}
 
  
  
//***************************** comparison************************************************

    Template.comparison.onRendered(function() {
    // Get the context of the canvas element we want to select
    var ct1  = document.getElementById("comparet1").getContext("2d");
    var ct2 = document.getElementById("comparet2").getContext("2d");
    var ct3 = document.getElementById("comparet3").getContext("2d");
    var ctx4 = document.getElementById("myChart4").getContext("2d");
    var ctx5 = document.getElementById("myChart5").getContext("2d");

    // Set the options
    var options = {

        ///Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,

        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",

        //Number - Width of the grid lines
        scaleGridLineWidth: 1,

        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,

        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,

        //Boolean - Whether the line is curved between points
        bezierCurve: true,

        //Number - Tension of the bezier curve between points
        bezierCurveTension: 0.4,

        //Boolean - Whether to show a dot for each point
        pointDot: true,

        //Number - Radius of each point dot in pixels
        pointDotRadius: 4,

        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,

        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,

        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,

        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,

        //Boolean - Whether to fill the dataset with a colour
        datasetFill: true,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    };

    var options2 = {
        //Boolean - Whether to show lines for each scale point
        scaleShowLine: true,

        //Boolean - Whether we show the angle lines out of the radar
        angleShowLineOut: true,

        //Boolean - Whether to show labels on the scale
        scaleShowLabels: false,

        // Boolean - Whether the scale should begin at zero
        scaleBeginAtZero: true,

        //String - Colour of the angle line
        angleLineColor: "rgba(0,0,0,.1)",

        //Number - Pixel width of the angle line
        angleLineWidth: 1,

        //String - Point label font declaration
        pointLabelFontFamily: "'Arial'",

        //String - Point label font weight
        pointLabelFontStyle: "normal",

        //Number - Point label font size in pixels
        pointLabelFontSize: 10,

        //String - Point label font colour
        pointLabelFontColor: "#666",

        //Boolean - Whether to show a dot for each point
        pointDot: true,

        //Number - Radius of each point dot in pixels
        pointDotRadius: 3,

        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,

        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,

        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,

        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,

        //Boolean - Whether to fill the dataset with a colour
        datasetFill: true,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    }

    // Set the data
    var data = {
        labels: ["Semester 1", "Semester 2", "Semester 3", "Semester 4", "Semester 5", "Semester 6", "Semester 7", "Semester 8"],
        datasets: [{
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data:newdata
        }, {
            label: "My Second dataset",
            fillColor: "rgba(151,187,205,0.2)",
            strokeColor: "rgba(151,187,205,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: newdata2
        }]
    };
    var data2 = {
        labels: ["Mathematics 1", "Physics 1 ", "Electircal Circuit", "C Programming", "Mathematics 2","Physics 2", "DS"],
        datasets: [{
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: [random(), random(), random(), random(), random(), random(), random()]
        }, {
            label: "My Second dataset",
            fillColor: "rgba(255, 153, 0,0.2)",
            strokeColor: "rgba(204, 122, 0,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: [random(), random(), random(), random(), random(), random(), random()]
        }]
    };
    var data3 = {
        labels: ["Mathematics 1", "Physics 1 ", "Electircal Circuit", "C Programming", "Mathematics 2","Physics 2", "DS"],
        datasets: [{
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: [random(), random(), random(), random(), random(), random(), random()]
        }, {
            label: "My Second dataset",
            fillColor: "rgba(255, 153, 0,0.2)",
            strokeColor: "rgba(204, 122, 0,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: [random(), random(), random(), random(), random(), random(), random()]
        }]
    };

    
    var data4 = [
    {
        value: random(),
        color:"#F7464A",
        highlight: "#FF5A5E",
        label: "Red"
    },
    {
        value: random(),
        color: "#46BFBD",
        highlight: "#5AD3D1",
        label: "Green"
    },
    {
        value: random(),
        color: "#FDB45C",
        highlight: "#FFC870",
        label: "Yellow"
    }
    ]

    // draw the charts
    var myLineChart = new Chart(ct1).Line(data, options);
    var myRadarChart = new Chart(ct2).Bar(data2, options2);
    var chart3 = new Chart(ct3).Bar(data3, options2);
    var myPolarArea = new Chart(ctx3).PolarArea(data3, {
        segmentStrokeColor: "#000000"
    });
    // For a pie chart
    var myPieChart = new Chart(ctx4).Pie(data4,{
        animateScale: true
    });

    // And for a doughnut chart
    var myDoughnutChart = new Chart(ctx5).Doughnut(data4,{
        animateScale: true
    });
});

Template.moreCharts.onRendered(function() {
    var ctx  = document.getElementById("myChart").getContext("2d");

    var rand1 = random();
    var rand2 = random();
    var rand3 = random();
    var data = [
    {
        value: rand1,
        color:"#F7464A",
        highlight: "#FF5A5E",
        label: "Red"
    },
    {
        value: rand2,
        color: "#46BFBD",
        highlight: "#5AD3D1",
        label: "Green"
    },
    {
        value: rand3,
        color: "#FDB45C",
        highlight: "#FFC870",
        label: "Yellow"
    }
    ]
    var myPieChart = new Chart(ctx).Pie(data);
});

function random() {
    return Math.floor((Math.random() * 100) + 1);
}
 
  
  





//  **************************** COMPARISON Ends Here***************************





